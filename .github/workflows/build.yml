name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss-dev libasound2-dev
          sudo apt-get install -y libgtk-3-dev libxss1 libgconf-2-4 xvfb
          # Install PhantomJS dependencies
          sudo apt-get install -y fontconfig libfreetype6 libfontconfig1

      - name: Install dependencies
        run: npm install --legacy-peer-deps
        env:
          PHANTOMJS_CDNURL: https://github.com/Medium/phantomjs/releases/download/v2.1.1
          ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
          ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder

      - name: Build Electron app
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          WIN_CSC_LINK: ""
          WIN_CSC_KEY_PASSWORD: ""
          APPLE_ID: ""
          APPLE_ID_PASS: ""
          CSC_LINK: ""
          CSC_KEY_PASSWORD: ""
          PHANTOMJS_CDNURL: https://github.com/Medium/phantomjs/releases/download/v2.1.1
          # Use virtual display for Linux
          DISPLAY: ${{ matrix.os == 'ubuntu-latest' && ':99' || '' }}

      - name: Setup virtual display (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/*.exe
            dist/**/*.dmg
            dist/**/*.zip
            dist/**/*.AppImage
            dist/**/*.deb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 